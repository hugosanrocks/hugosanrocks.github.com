% gda03_03
%
% Ln fits of straight line to to synthetic data
% done via grid search

% z's
N=30;
zmin=0;
zmax=10;
z = sort(random('Uniform',zmin,zmax,N,1));

% d = a + b*z + noise
a=2.0;
b=1.0;
sd=0.5;
dobs = a+b*z+random('Normal',0,sd,N,1);

% one terrible outlier
dobs(N)=rand;

% grid
Na=201;
amin=0;
Da = 0.1;
Nb=201;
bmin=0;
Db = 0.1;

% populate grid with errors
E1 = zeros(Na,Nb);
E2 = zeros(Na,Nb);
Einf = zeros(Na,Nb);
for i=[1:Na]
for j=[1:Nb]
    ao = amin+Da*(i-1);
    bo = bmin+Db*(j-1);
    dpre = ao + bo*z;
    e = dobs-dpre;
    abse = abs(e);
    E1(i,j)=sum(abse);
    E2(i,j)=sum(abse.^2);
    Einf(i,j)=sum(abse.^20); % cheating; using large but finite power
end
end

% find minimum error
[Ep, p] = min(E1);
[E1min, c1] = min(Ep);
r1 = p(c1);
a1 = amin+Da*(r1-1);
b1 = bmin+Db*(c1-1);
dpre1 = a1 + b1*z;

[Ep, p] = min(E2);
[E2min, c2] = min(Ep);
r2 = p(c2);
a2 = amin+Da*(r2-1);
b2 = bmin+Db*(c2-1);
dpre2 = a2 + b2*z;

[Ep, p] = min(Einf);
[Einfmin, cinf] = min(Ep);
rinf = p(cinf);
ainf = amin+Da*(rinf-1);
binf = bmin+Db*(cinf-1);
dpreinf = ainf + binf*z;

disp(sprintf('1: a %f b %f', a1, b1 ));
disp(sprintf('1: a %f b %f', a2, b2 ));
disp(sprintf('1: a %f b %f', ainf, binf ));

% plot results
figure(1);
clf;

pdmin=0;
pdmax=15;

set(gca,'LineWidth',2);
hold on;
axis( [zmin, zmax, pdmin, pdmax ]' );
plot( z, dobs, 'ko', 'LineWidth', 2);
plot( z, dpre1, 'r-', 'LineWidth', 2);
plot( z, dpre2, 'g-', 'LineWidth', 2);
plot( z, dpreinf, 'b-', 'LineWidth', 2);
xlabel('z');
ylabel('d');

